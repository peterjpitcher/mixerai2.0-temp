import { useRef } from 'react';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Checkbox } from '@/components/ui/checkbox';
import { Button } from '@/components/ui/button';
import { Rocket } from 'lucide-react';
import { InputField, OutputField } from '@/types/template';

interface AISettingsSectionProps {
  fieldData: InputField | OutputField;
  fieldType: 'input' | 'output';
  availableInputFields: Array<{ id: string; name: string | null }>;
  onAIFeatureChange: (feature: string, checked: boolean) => void;
  onAIPromptChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;
  onInsertText: (text: string, textArea: HTMLTextAreaElement | null) => void;
}

export function AISettingsSection({
  fieldData,
  fieldType,
  availableInputFields,
  onAIFeatureChange,
  onAIPromptChange,
  onInsertText
}: AISettingsSectionProps) {
  const aiPromptRef = useRef<HTMLTextAreaElement>(null);
  
  const insertPlaceholder = (fieldId: string) => {
    onInsertText(`{{${fieldId}}}`, aiPromptRef.current);
  };
  
  const insertBrandDataOrPlaceholder = (placeholder: string) => {
    onInsertText(`{{brand:${placeholder}}}`, aiPromptRef.current);
  };

  if (fieldType === 'input') {
    const inputField = fieldData as InputField;
    return (
      <div className="space-y-2">
        <div className="flex items-center space-x-2">
          <Checkbox 
            id="aiSuggester" 
            checked={inputField.aiSuggester || false}
            onCheckedChange={(checked) => onAIFeatureChange('aiSuggester', checked as boolean)}
          />
          <Label htmlFor="aiSuggester">
            <div className="flex items-center space-x-2">
              <Rocket className="h-4 w-4" />
              <span>Enable AI Suggester for this field</span>
            </div>
          </Label>
        </div>
        {inputField.aiSuggester && (
          <p className="text-sm text-muted-foreground ml-6">
            Users will see an AI suggestion button for this field
          </p>
        )}
      </div>
    );
  }
  
  const outputField = fieldData as OutputField;
  
  return (
    <div className="space-y-4">
      <div className="space-y-2">
        <div className="flex items-center space-x-2">
          <Checkbox 
            id="aiAutoComplete" 
            checked={outputField.aiAutoComplete !== false}
            onCheckedChange={(checked) => onAIFeatureChange('aiAutoComplete', checked as boolean)}
          />
          <Label htmlFor="aiAutoComplete">
            <div className="flex items-center space-x-2">
              <Rocket className="h-4 w-4" />
              <span>AI Auto-complete</span>
            </div>
          </Label>
        </div>
        <p className="text-sm text-muted-foreground ml-6">
          This field will be automatically generated by AI
        </p>
      </div>
      
      <div className="space-y-4 border-t pt-4">
        <h4 className="font-medium">Brand Context Options</h4>
        <div className="space-y-2">
          <div className="flex items-center space-x-2">
            <Checkbox 
              id="useBrandIdentity" 
              checked={outputField.useBrandIdentity || false}
              onCheckedChange={(checked) => onAIFeatureChange('useBrandIdentity', checked as boolean)}
            />
            <Label htmlFor="useBrandIdentity">Use Brand Identity</Label>
          </div>
          
          <div className="flex items-center space-x-2">
            <Checkbox 
              id="useToneOfVoice" 
              checked={outputField.useToneOfVoice || false}
              onCheckedChange={(checked) => onAIFeatureChange('useToneOfVoice', checked as boolean)}
            />
            <Label htmlFor="useToneOfVoice">Use Tone of Voice</Label>
          </div>
          
          <div className="flex items-center space-x-2">
            <Checkbox 
              id="useGuardrails" 
              checked={outputField.useGuardrails || false}
              onCheckedChange={(checked) => onAIFeatureChange('useGuardrails', checked as boolean)}
            />
            <Label htmlFor="useGuardrails">Use Guardrails</Label>
          </div>
        </div>
      </div>
      
      <div>
        <Label htmlFor="aiPrompt">AI Generation Prompt</Label>
        <Textarea
          ref={aiPromptRef}
          id="aiPrompt"
          name="aiPrompt"
          value={fieldData.aiPrompt || ''}
          onChange={onAIPromptChange}
          placeholder="Enter instructions for AI content generation..."
          rows={6}
          className="font-mono text-sm"
        />
        
        {availableInputFields.length > 0 && (
          <div className="mt-2 space-y-2">
            <p className="text-sm text-muted-foreground">Insert placeholders:</p>
            <div className="flex flex-wrap gap-2">
              {availableInputFields.map(field => (
                <Button
                  key={field.id}
                  type="button"
                  size="sm"
                  variant="outline"
                  onClick={() => insertPlaceholder(field.id)}
                >
                  {field.name || field.id}
                </Button>
              ))}
            </div>
            
            <p className="text-sm text-muted-foreground mt-2">Insert brand data:</p>
            <div className="flex flex-wrap gap-2">
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('name')}>
                Brand Name
              </Button>
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('identity')}>
                Brand Identity
              </Button>
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('toneOfVoice')}>
                Tone of Voice
              </Button>
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('guardrails')}>
                Guardrails
              </Button>
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('summary')}>
                Brand Summary
              </Button>
              <Button type="button" size="sm" variant="outline" onClick={() => insertBrandDataOrPlaceholder('brandObject')}>
                Generic Brand Object
              </Button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}